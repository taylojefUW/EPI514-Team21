setwd("C:/epi514")
library(haven)
library(package,character.only=T)
library(magrittr)
library(dplyr)
library(foreign)
brfss2019 <- read.xport("LLCP2019.XPT")
brfss2018 <- read.xport("LLCP2018.XPT")
brfss2017 <- read.xport("LLCP2017.XPT")
brfss2016 <- read.xport("LLCP2016.XPT")
brfss2015 <- read.xport("LLCP2015.XPT")
brfss19V1 <- read.xport("LLCP19V1.XPT")
brfss18V1 <- read.xport("LLCP18V1.XPT")
brfss17V1 <- read.xport("LLCP17V1.XPT")
brfss16V1 <- read.xport("LLCP16V1.XPT")
brfss16V2 <- read.xport("LLCP16V2.XPT")
brfss15V2 <- read.xport("LLCP15V2.XPT")

brfss2019V1_c <- brfss19V1[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV1", "SEXVAR", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC3", "HPVADSHT", "SOMALE", "SOFEMALE","TRNSGNDR")]
brfss2019V1_c <- brfss2019V1_c[brfss2019V1_c$X_STATE==25, ]

brfss2019_c <- brfss2019[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LLCPWT", "SEXVAR", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC3", "HPVADSHT", "SOMALE", "SOFEMALE","TRNSGNDR")]
brfss2019_c <- brfss2019_c[brfss2019_c$X_STATE==c(13,17,28,46,47,48), ]

brfss2018_c <- brfss2018[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LLCPWT", "SEX1", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SOMALE", "SOFEMALE", "TRNSGNDR")]
brfss2018_c <- brfss2018_c[brfss2018_c$X_STATE==c(1,9,15,28,29,34,47,48), ]

brfss2018V1_c <-brfss18V1[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV1", "SEX1", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SOMALE", "SOFEMALE", "TRNSGNDR")]
brfss2018V1_c <- brfss2018V1_c[brfss2018V1_c$X_STATE==25, ]

brfss2017_c <- brfss2017[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LLCPWT", "SEX", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT", "TRNSGNDR")]
brfss2017_c <- brfss2017_c[brfss2017_c$X_STATE==c(5,13,28,33,45,47,48), ]

brfss2017V1_c <- brfss17V1[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV1", "SEX", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT", "TRNSGNDR")]
brfss2017V1_c <- brfss2017V1_c[brfss2017V1_c$X_STATE==25, ]

brfss2016_c <- brfss2016[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LLCPWT", "SEX", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT", "TRNSGNDR")]
brfss2016_c <- brfss2016_c[brfss2016_c$X_STATE==c(1,9,15,29,31,37,45,46,48), ]

brfss2016V2_c <- brfss16V2[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV2", "SEX", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT", "TRNSGNDR")]
brfss2016V2_c <- brfss2016V2_c[brfss2016V2_c$X_STATE==c(25,6), ]

brfss2015_c <- brfss2015[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LLCPWT", "SEX", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT", "TRNSGNDR")]
brfss2015_c <- brfss2015_c[brfss2015_c$X_STATE==c(13, 25, 28, 45, 54), ]

brfss2015V2_c <- brfss15V2[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV2", "SEX", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT", "TRNSGNDR")]
brfss2015V2_c <- brfss2015V2_c[brfss2015V2_c$X_STATE==c(8,48), ]

brfss2015V1_c <- brfss15V1[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV1", "SEX", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT", "TRNSGNDR")]
brfss2015V1_c <- brfss2015V1_c[brfss2015V1_c$X_STATE==c(12,23), ]


#Combining the 2 sexual orientation variables in 2019& 2018 datasets into one 
brfss2019_c$SXORIENT[brfss2019_c$SOFEMALE ==2 & brfss2019_c$SOMALE ==2] <-1  #straight
brfss2019_c$SXORIENT[brfss2019_c$SOFEMALE ==1 & brfss2019_c$SOMALE ==1] <-2  #gay/lesbian  
brfss2019_c$SXORIENT[brfss2019_c$SOFEMALE ==3 & brfss2019_c$SOMALE ==3] <-3  #bisexual  
brfss2019_c$SXORIENT[brfss2019_c$SOFEMALE ==4 & brfss2019_c$SOMALE ==4] <-4  #other 
brfss2019_c$SXORIENT[brfss2019_c$SOFEMALE ==7 & brfss2019_c$SOMALE ==7] <-7 #don't know 
brfss2019_c$SXORIENT[brfss2019_c$SOFEMALE ==9 & brfss2019_c$SOMALE ==9] <-9 #Refused/missing

brfss2019V1_c$SXORIENT[brfss2019V1_c$SOFEMALE ==2 & brfss2019V1_c$SOMALE ==2] <-1  #straight
brfss2019V1_c$SXORIENT[brfss2019V1_c$SOFEMALE ==1 & brfss2019V1_c$SOMALE ==1] <-2  #gay/lesbian  
brfss2019V1_c$SXORIENT[brfss2019V1_c$SOFEMALE ==3 & brfss2019V1_c$SOMALE ==3] <-3  #bisexual  
brfss2019V1_c$SXORIENT[brfss2019V1_c$SOFEMALE ==4 & brfss2019V1_c$SOMALE ==4] <-4  #other 
brfss2019V1_c$SXORIENT[brfss2019V1_c$SOFEMALE ==7 & brfss2019V1_c$SOMALE ==7] <-7 #don't know 
brfss2019V1_c$SXORIENT[brfss2019V1_c$SOFEMALE ==9 & brfss2019V1_c$SOMALE ==9] <-9

brfss2018_c$SXORIENT[brfss2018_c$SOFEMALE ==2 & brfss2018_c$SOMALE ==2] <-1  #straight
brfss2018_c$SXORIENT[brfss2018_c$SOFEMALE ==1 & brfss2018_c$SOMALE ==1] <-2  #gay/lesbian  
brfss2018_c$SXORIENT[brfss2018_c$SOFEMALE ==3 & brfss2018_c$SOMALE ==3] <-3  #bisexual  
brfss2018_c$SXORIENT[brfss2018_c$SOFEMALE ==4 & brfss2018_c$SOMALE ==4] <-4  #other 
brfss2018_c$SXORIENT[brfss2018_c$SOFEMALE ==7 & brfss2018_c$SOMALE ==7] <-7 #don't know 
brfss2018_c$SXORIENT[brfss2018_c$SOFEMALE ==9 & brfss2018_c$SOMALE ==9] <-9 #Refused/missing

brfss2018V1_c$SXORIENT[brfss2018V1_c$SOFEMALE ==2 & brfss2018V1_c$SOMALE ==2] <-1  #straight
brfss2018V1_c$SXORIENT[brfss2018V1_c$SOFEMALE ==1 & brfss2018V1_c$SOMALE ==1] <-2  #gay/lesbian  
brfss2018V1_c$SXORIENT[brfss2018V1_c$SOFEMALE ==3 & brfss2018V1_c$SOMALE ==3] <-3  #bisexual  
brfss2018V1_c$SXORIENT[brfss2018V1_c$SOFEMALE ==4 & brfss2018V1_c$SOMALE ==4] <-4  #other 
brfss2018V1_c$SXORIENT[brfss2018V1_c$SOFEMALE ==7 & brfss2018V1_c$SOMALE ==7] <-7 #don't know 
brfss2018V1_c$SXORIENT[brfss2018V1_c$SOFEMALE ==9 & brfss2018V1_c$SOMALE ==9] <-9 #Refused/missing

#Dropping SOMALE and SOFEMALE variables so datasets can be merged 
brfss2019_c <- brfss2019_c[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LLCPWT", "SEXVAR", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC3", "HPVADSHT","SXORIENT","TRNSGNDR")]
brfss2018_c <- brfss2018_c[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LLCPWT", "SEX1", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT","TRNSGNDR")]

brfss2019V1_c <- brfss2019V1_c[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV1", "SEXVAR", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC3", "HPVADSHT","SXORIENT","TRNSGNDR")]
brfss2018V1_c <- brfss2018V1_c[, c("X_AGEG5YR", "X_STATE", "IYEAR", "DISPCODE", "X_PSU", "X_STSTR", "X_LCPWTV1", "SEX1", "HLTHPLN1", "PERSDOC2", "MEDCOST", "CHECKUP1", "EMPLOY1", "INCOME2", "X_RACE", "HPVADVC2", "HPVADSHT","SXORIENT","TRNSGNDR")]

colnames(brfss2019_c)[which(names(brfss2019_c) == "HPVADVC3")] <- "HPVADVC2"
colnames(brfss2019_c)[which(names(brfss2019_c) == "SEXVAR")] <- "SEX1"

colnames(brfss2019V1_c)[which(names(brfss2019V1_c) == "HPVADVC3")] <- "HPVADVC2"
colnames(brfss2019V1_c)[which(names(brfss2019V1_c) == "SEXVAR")] <- "SEX1"

colnames(brfss2017_c)[which(names(brfss2017_c) == "SEX")] <- "SEX1"
colnames(brfss2017V1_c)[which(names(brfss2017V1_c) == "SEX")] <- "SEX1"

colnames(brfss2016V2_c)[which(names(brfss2016V2_c) == "SEX")] <- "SEX1"
colnames(brfss2016_c)[which(names(brfss2016_c) == "SEX")] <- "SEX1"

colnames(brfss2015_c)[which(names(brfss2015_c) == "SEX")] <- "SEX1"
colnames(brfss2015V1_c)[which(names(brfss2015V1_c) == "SEX")] <- "SEX1"
colnames(brfss2015V2_c)[which(names(brfss2015V2_c) == "SEX")] <- "SEX1"

colnames(brfss2015V1_c)[which(names(brfss2015V1_c) == "X_LCPWTV1")] <- "X_LLCPWT"
colnames(brfss2015V2_c)[which(names(brfss2015V2_c) == "X_LCPWTV2")] <- "X_LLCPWT"
colnames(brfss2016V2_c)[which(names(brfss2016V2_c) == "X_LCPWTV2")] <- "X_LLCPWT"
colnames(brfss2017V1_c)[which(names(brfss2017V1_c) == "X_LCPWTV1")] <- "X_LLCPWT"
colnames(brfss2018V1_c)[which(names(brfss2018V1_c) == "X_LCPWTV1")] <- "X_LLCPWT"
colnames(brfss2019V1_c)[which(names(brfss2019V1_c) == "X_LCPWTV1")] <- "X_LLCPWT"

total <- rbind(brfss2019_c, brfss2019V1_c)
total2 <- rbind(total, brfss2018_c)
total3 <- rbind(total2, brfss2018V1_c)
total4 <- rbind(total3, brfss2017_c)
total5 <- rbind(total4, brfss2017V1_c)
total6 <- rbind(total5, brfss2016_c)
total7 <- rbind(total6, brfss2016V2_c)
total8 <- rbind(total7, brfss2015_c)
total9 <- rbind(total8, brfss2015V2_c)
clean <- rbind(total9, brfss2015V1_c)

#Assigning missingness to variables 

clean$X_AGEG5YR[clean$X_AGEG5YR > 4] <- NA
summary(clean$X_AGEG5YR) #check to see if worked 

clean$DISPCODE[clean$DISPCODE == 1200] <- NA  #Keeping only completed interviews 

clean$HLTHPLN1[clean$HLTHPLN1 == 7] <- NA
clean$HLTHPLN1[clean$HLTHPLN1 == 9] <- NA

summary(clean$HLTHPLN1)

clean$PERSDOC2[clean$PERSDOC2 == 7] <- NA
clean$PERSDOC2[clean$PERSDOC2 == 9] <- NA

summary(clean$PERSDOC2)

clean$MEDCOST[clean$MEDCOST == 7] <- NA
clean$MEDCOST[clean$MEDCOST == 9] <- NA

summary(clean$MEDCOST)

clean$CHECKUP1[clean$CHECKUP1 == 7] <- NA
clean$CHECKUP1[clean$CHECKUP1 == 9] <- NA

summary(clean$CHECKUP1)

clean$EMPLOY1[clean$EMPLOY1 == 9] <- NA

summary(clean$EMPLOY1)

clean$INCOME2[clean$INCOME2 == 77] <- NA
clean$INCOME2[clean$INCOME2 == 99] <- NA

summary(clean$INCOME2)

clean$X_RACE[clean$X_RACE ==9]<- NA
summary(clean$X_RACE)

clean$HPVADVC2[clean$HPVADVC2 == 7] <- NA
clean$HPVADVC2[clean$HPVADVC2 == 9] <- NA

summary(clean$HPVADVC2)

clean$HPVADSHT[clean$HPVADSHT == 77] <- NA
clean$HPVADSHT[clean$HPVADSHT == 99] <- NA
clean$HPVADSHT[clean$HPVADSHT >=4]<- NA

summary(clean$HPVADSHT)

clean$SXORIENT[clean$SXORIENT == 7] <- NA
clean$SXORIENT[clean$SXORIENT == 9] <- NA

summary(clean$SXORIENT)

clean$TRNSGNDR[clean$TRNSGNDR == 7] <- NA
clean$TRNSGNDR[clean$TRNSGNDR == 9] <- NA

#Creating binary HPV vaccine variable (outcome) (1= yes, have received HPV vaccine, 2= no, have not received HPV vaccine)  

clean$HPVVAC[clean$HPVADVC2 == 1] <- 1
clean$HPVVAC[clean$HPVADVC2 >= 2] <- 2
clean$HPVVAC <-factor(clean$HPVVAC, levels=1:2, labels=c("Yes","No"))
  
table(clean$HPVVAC)

#Creating Exposure Variables 

clean$income[clean$INCOME2 == 1] <- 1
clean$income[clean$INCOME2 >1 & clean$INCOME2 <=4] <- 2
clean$income[clean$INCOME2 >4 & clean$INCOME2 <=6] <- 3
clean$income[clean$INCOME2 == 7] <- 4
clean$income[clean$INCOME2 == 8] <- 5
clean$income <-factor(clean$income, levels= 1:5, labels=c("<$10,000","$10,000-$24,999","$25,000-$49,999","$50,000-$74,999",">$75,000"))

table(clean$income)

clean$INSURANCE <- factor(clean$HLTHPLN1, levels=1:2, labels = c("Insured", "Uninsured")) 

table(clean$INSURANCE)

clean$COSTBARRIERS <- factor(clean$MEDCOST, levels=1:2, labels = c("Yes", "No"))

table(clean$COSTBARRIERS)

clean$PCPstatus <- factor(clean$PERSDOC2, levels=1:3, labels = c("1 personal doctor", ">1 personal doctor", "No"))

table(clean$PCPstatus)

#Creating other variables of interest 

clean$RACE <- factor(clean$X_RACE, levels=1:8, labels = c("White", "Black", "American Indian/Alska Native","Asian", 
                                                            "Native Hawaiian", "Other", "Multiracial","Hispanic"))

table(clean$RACE)
table(clean$X_RACE)

clean$AGE <-factor(clean$X_AGEG5YR, levels=1:4, labels = c("18-24","25-29","30-34","35-39"))
table(clean$X_AGEG5YR)
table(clean$AGE)


clean$SEXORIENT <-factor(clean$SXORIENT, levels=1:4, labels = c("Straight","Gay/Lesbian","Bisexual","Other"))

table(clean$SEXORIENT)
table(clean$SXORIENT)

clean$TRANSGENDER <-factor(clean$TRNSGNDR, levels=1:4, labels = c("Yes:Male to Female","Yes: Female to Male","Yes: gender nonconforming","No"))

table(clean$TRANSGENDER)
table(clean$TRNSGNDR)

clean$EMPLOYMENT <-factor(clean$EMPLOY1, levels=1:8, labels = c("Employed","Self-employed","Out of work >1 year","Out of work < 1 year",
                                                                  "Homemaker", "Student", "Retired", "Unable to work"))

table(clean$EMPLOY1)
table(clean$EMPLOYMENT)

clean$CHECKUP1[clean$CHECKUP1 == 8]<-5

clean$TIMESINCELAST <- factor(clean$CHECKUP1, levels=1:5, labels = c("Within past year", "within past 2 years", "Within past 5 years",
                                                                    ">5 years ago", "Never"))
table(clean$CHECKUP1)
table(clean$TIMESINCELAST) 

#Writing CSV of data 

clean <- clean[, c("X_STATE","IYEAR","DISPCODE","X_PSU","X_STSTR","X_LLCPWT","SEX1","HPVVAC","income",
                   "INSURANCE","COSTBARRIERS","PCPstatus","RACE","AGE","SEXORIENT","TRANSGENDER","TIMESINCELAST","EMPLOYMENT",
                   "HPVADSHT")]
                   
data <- clean[clean$SEX1 == 2, ]      #filter to keep only female data 
final <- data[data$AGE<=4, ]          #filter to keep only females aged 18-39 

write.csv(final,'epi514finaldata.csv')
 



#Code used for table 1 

final <- read.csv("epi514finaldata.csv")

final$HPVVAC[final$HPVVAC == "Yes"]<-1 
final$HPVVAC[final$HPVVAC == "No"]<-2

final$HPVVAC <-factor(final$HPVVAC, levels=1:2, labels=c("Yes","No"))

#Use regular tables to get raw numbers 
table(final$AGE, final$HPVVAC)

table(final$income, final$HPVVAC)

table(final$INSURANCE, final$HPVVAC)

table(final$RACE, final$HPVVAC)

#Create survey tables to get weighted percentages 

final <- subset(final, !is.na( X_LLCPWT))

options(survey.lonely.psu = "adjust")
design <- svydesign(data = final, id=~1, strata= ~X_STSTR, weight= ~X_LLCPWT, nest= TRUE)

race_table <-svytable(~HPVVAC + RACE, design)

prop.table(race_table, margin = 2)

insurance_table <-svytable(~HPVVAC + INSURANCE, design)

prop.table(insurance_table, margin = 2)

age_table <-svytable(~HPVVAC + AGE, design)

prop.table(age_table, margin = 2)

income_table <-svytable(~HPVVAC + income, design)

prop.table(income_table, margin = 2)


#code used for table 2 

rm(list=ls())
setwd("C:/users/rache/downloads/data")

data <- read.csv("epi514final.csv")

View(data)

table(data$HPVVAC)

library(survey)
library(epiR)
library(tidyverse)
library(foreign)

data <- subset(data , !is.na( X_LLCPWT) )

design <- svydesign(
  id = ~1,
  strata = ~X_STSTR,
  weights = ~X_LLCPWT,
  data = data) 

options(survey.lonely.psu = "adjust")


# Recode so that the resulting table looks like the following:
#
# -----------	----------	----------	----------
#             Disease   +	  Disease -	Total
# -----------	----------	----------	----------
#   Expose +  	a	          b	          a+b
# Expose -	    c	          d	          c+d
# -----------	----------	----------	----------
#   Total	a+c	b+d	a+b+c+d
# -----------	----------	----------	----------

data$HPVVAC[data$HPVVAC == "Yes"]<-1 
data$HPVVAC[data$HPVVAC == "No"]<-2

data$HPVVAC <-factor(data$HPVVAC, levels=1:2, labels=c("Yes","No"))

table(data$HPVVAC)



#RR- insurance status and HPVVAC status 

table(data$INSURANCE)

strat_insurance <- with(data,
                table(INSURANCE, HPVVAC))


strat_insurance

prop.table(strat_insurance)

epi.2by2(strat_insurance)


#Adjusted for age- insurance status and HPVVAC status 

(age_strat_insurance <- table(data$INSURANCE, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_insurance)



#RR cost barriers and HPVVAC status  

table(data$COSTBARRIERS)

data$COSTBARRIERS[data$COSTBARRIERS == "Yes"]<-1 
data$COSTBARRIERS[data$COSTBARRIERS == "No"]<-2

data$COSTBARRIERS <-factor(data$COSTBARRIERS, levels=1:2, labels=c("Yes","No"))



table(data$COSTBARRIERS)

strat_cost <- with(data,
                  table(COSTBARRIERS, HPVVAC))


strat_cost

epi.2by2(strat_cost)


#Adjusted for age- cost barriers and HPVVAC status 

(age_strat_cost <- table(data$COSTBARRIERS, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_cost)


#RR Income levels and HPV Vac status

data$income[data$income== "<$10,000"]<-1
data$income[data$income== "$10,000-$24,999"]<-2
data$income[data$income== "$25,000-$49,999"]<-3
data$income[data$income== "$50,000-$74,999"]<-4
data$income[data$income== ">$75,000"]<-5

data$income <-factor(data$income, levels= 1:5, labels=c("<$10,000","$10,000-$24,999","$25,000-$49,999","$50,000-$74,999",">$75,000"))

table(data$income)

table(data$income, data$HPVVAC)


strat_income12 <- with(data,
                      table(income, HPVVAC))



strat_income12

#<$10,000 vs. >$75,000 

data$income_less10_more75 <-factor(data$income,
                                   levels = levels(data$income)[c(1,5)])
  
table(data$income_less10_more75)  

strat_income1 <- with(data,
                table(income_less10_more75, HPVVAC))
  
  
strat_income1

epi.2by2(strat_income1)


#Adjusted for age- income <$10,000 and HPVVAC status 

(age_strat_income1 <- table(data$income_less10_more75, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_income1)


#$10,000-$24,999 vs. $>75,000 

data$income_1025_more75 <- factor(data$income,
                                  levels = levels(data$income)[c(2,5)])

table(data$income_1025_more75)  

strat_income2 <- with(data,
                      table(income_1025_more75, HPVVAC))



strat_income2

epi.2by2(strat_income2)



#Adjusted for age- income $10,000-$24,999 and HPVVAC status 

(age_strat_income2 <- table(data$income_1025_more75, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_income2)



#$25,000-$49,999 vs.>$75,0000 

data$income_2550_more75 <- factor(data$income,
                                  levels = levels(data$income)[c(3,5)])

table(data$income_2550_more75, data$HPVVAC)  

strat_income3 <- with(data,
                      table(income_2550_more75, HPVVAC))


strat_income3

epi.2by2(strat_income3)


#Adjusted for age- income $25,000-$49,999 and HPVVAC status 

(age_strat_income3 <- table(data$income_2550_more75, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_income3)



#$50,000-$74,999  vs. >$75,00
data$income_5075_more75 <- factor(data$income,
                                  levels = levels(data$income)[c(4,5)])

table(data$income_5075_more75)  

strat_income4 <- with(data,
                      table(income_5075_more75, HPVVAC))


strat_income4


epi.2by2(strat_income4)



#Adjusted for age- income $50,000-$74,999 and HPVVAC status 

(age_strat_income4 <- table(data$income_5075_more75, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_income4)



#PCP Status and HPVVAC 

table(data$PCPstatus)
table(data$PCPstatus, data$HPVVAC)

#1 or more doc vs. no docs 

data$PCPstatus[data$PCPstatus== ">1 personal doctor"|data$PCPstatus== "1 personal doctor"]<-1
data$PCPstatus[data$PCPstatus== "No"]<-2

data$PCPstatus <-factor(data$PCPstatus, levels= 1:2, labels=c("Has a personal doctor","No"))



table(data$PCPstatus)  

strat_PCPstatus <- with(data,
                      table(PCPstatus, HPVVAC))


strat_PCPstatus

epi.2by2(strat_PCPstatus)   #RR = 1.17 (1.06, 1.29)  #p-value= 0.0 
#statistically significant results! 




#Adjusted for age- PCP status and HPVVAC status 

(age_strat_PCP <- table(data$PCPstatus, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_PCP)



#Length of time since last PCP visit 

table(data$TIMESINCELAST, data$HPVVAC)

data$TIMESINCELAST[data$TIMESINCELAST== "Within past year"] <-1
data$TIMESINCELAST[data$TIMESINCELAST== "within past 2 years"] <-2
data$TIMESINCELAST[data$TIMESINCELAST== "Within past 5 years"] <-3 
data$TIMESINCELAST[data$TIMESINCELAST== ">5 years ago" | data$TIMESINCELAST== "Never"]<-4


data$TIMESINCELAST <-factor(data$TIMESINCELAST, levels= 1:4, labels=c("<1year","1-2years","2-5years",">5years or never"))


table(data$TIMESINCELAST)


#>5years vs. 2-5years 

data$time_greater5vs2to5<-factor(data$TIMESINCELAST,
                               levels = levels(data$TIMESINCELAST)[c(3,4)])

table(data$time_greater5vs2to5)  

strat_time_greater5vs2to5 <- with(data,
                              table(time_greater5vs2to5, HPVVAC))


strat_time_greater5vs2to5

epi.2by2(strat_time_greater5vs2to5)  #RR= 1.48 (1.14, 1.93)



#Adjusted for age- 2-5 years and HPVVAC status 

(age_strat_time1 <- table(data$time_greater5vs2to5, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_time1)



#1-2 years vs. >5years 

data$time_greater5vs1to2<-factor(data$TIMESINCELAST,
                                 levels = levels(data$TIMESINCELAST)[c(2,4)])

table(data$time_greater5vs1to2)  

strat_time_greater5vs1to2 <- with(data,
                                  table(time_greater5vs1to2, HPVVAC))


strat_time_greater5vs1to2

epi.2by2(strat_time_greater5vs1to2)


#Adjusted for age- 1-2 years and HPVVAC status 

(age_strat_time2 <- table(data$time_greater5vs1to2, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_time2)



#<1year vs >5years ago 

data$time_greater5vsless1<-factor(data$TIMESINCELAST,
                                 levels = levels(data$TIMESINCELAST)[c(1,4)])

table(data$time_greater5vsless1)  

strat_time_greater5vsless1 <- with(data,
                                  table(time_greater5vsless1, HPVVAC))


strat_time_greater5vsless1

epi.2by2(strat_time_greater5vsless1)



#Adjusted for age- <1 year and HPVVAC status 

(age_strat_time3 <- table(data$time_greater5vsless1, data$HPVVAC, data$AGE, deparse.level=2))

epi.2by2(age_strat_time3)

